{"body":"[![build status](https://secure.travis-ci.org/baugarten/node-restful.png?branch=master)](http://travis-ci.org/baugarten/node-restful)\r\n\r\nnode-restful\r\n============\r\n\r\nCreate awesome APIs using express.\r\n\r\nRegister mongoose resources and default RESTful routes are automatically made\r\n\r\n```js\r\nvar express = require('express'),\r\n    restful = require('node-restful'),\r\n    mongoose = restful.mongoose;\r\nvar app = restful();\r\n\r\nvar movies = new restful.Model({\r\n  title: \"movies\",\r\n  methods: ['get', 'post', 'put', 'delete'],\r\n  schema: mongoose.Schema({\r\n    title: 'string',\r\n    year: 'number',\r\n  }),\r\n}); \r\n\r\napp.register(movies, '/movies');\r\n\r\napp.listen(3000);\r\n```\r\n## Install\r\n\r\n```\r\nnpm install node-restful\r\n```\r\n\r\n## Usage\r\n\r\nHere is a [tutorial](benaugarten.com/blog/2013/01/31/restful-a-better-rest-api-using-node-dot-js-with-express/) on how to use Restful\r\n\r\nThere is a good example application under examples/notes.\r\n\r\nI will also show some features and use cases for them, how to set up routes, etc.\r\n\r\nRESTful routes are automatically generated at the registration point. In the above examples, the routes generated are:\r\n```\r\nGET /movies\r\nPOST /movies\r\nPUT /movies/:id\r\nDELETE /movies/:id\r\n```\r\n\r\n### Methods\r\nIf we need code to execute before a particular method (say we need to fill in POST data beforehand), we can register a before post handler:\r\n```js\r\nvar movies = new restful.Model({\r\n  methods: ['get', 'put', 'delete', {\r\n    type: 'post',\r\n    before: function(req, res, next) {\r\n      // change request data through req.body.property = [val]\r\n      // Do whatever you need to\r\n      // but be sure to call\r\n      next(); // This calls the normal handler, needs to be called in every before/after/handler\r\n    },\r\n    after: function(req, res, next) {... ; next() } // Or an after handler\r\n  }];\r\n});\r\n```\r\n\r\n### Custom Routing\r\nIf we need to expose a custom resource route, lets say we want to have a search route on movies, its easy to add. Likewise, if you want to add a route that operates on a single instance (i.e. /movies/:id/route) then set the detail flag to true. \r\n\r\nThe keys to routes are the route names. The values are either functions (last examples) or objects that specify handlers and several other properties.\r\n\r\n```js\r\nvar movies = new restful.Model({\r\n  routes: {\r\n    search: {\r\n      handler: function(req, res, next) {\r\n        // preform a search\r\n        res.status = 200 // the return status code\r\n        res.bundle = {} // Whatever data you want to return, custom serialization methods soon to come\r\n        next(); // Then pass up control\r\n      },\r\n      methods: ['get'], // only respond to GET requests\r\n      detail: false, // false by default, this operates on the collection of movies, /movies/search\r\n    },\r\n    similar: {\r\n      handler: function(req, res, next, err, movie) {\r\n        // get similar movies\r\n        next();\r\n      },\r\n      detail: true, // this is a detial endpoint, which operates on ONE movie, /movies/:id/similar\r\n      methods: ['get'],\r\n    },\r\n    anotherroute: function(req, res, next) { ... ; next() } // All methods, /movies/anotherroute\r\n  },\r\n});\r\n```\r\n\r\nYou can also add the same routes by doing\r\n```js\r\nmoves.userroute({\r\n  search: ...,\r\n  similar: ...,\r\n});\r\n```\r\n\r\n### Model\r\nImportant functions:\r\n```js\r\nModel#new(properties)\r\n```\r\nMakes a new instance of a particular model with the given properties. Returns a [mongoose model](http://mongoosejs.com/docs/api.html#model-js) instance.\r\n\r\n```js\r\nModel#userroute(route, fn)\r\n```\r\nTakes a route, like 'search', 'similar' or a period delimited route i.e. 'search.similar' and a function like the ones above or an object like the ones above in custom routing. It then registers the custom route at the specified endpoint. If its a detail route then it will be prefixed by '/movies/:id/', otherwise by '/movies/'. If the route has periods or slashes, then the route will be nested, i.e. if 'search.similar' is a detail route, then its endpoint would be '/movies/:id/search/similar'\r\n\r\n```js\r\nModel#Model\r\n```\r\nReturns the underlying [mongoose model](http://mongoosejs.com/docs/api.html#model-js)\r\n\r\n```js\r\nModel#register(app, url)\r\n```\r\nRegisters this model to the app at the given url\r\n\r\n\r\n### Other functions\r\n\r\nThere are also several other functions that are exposed through restful.\r\n\r\n```js\r\nrestful.respond404()\r\n```\r\nReturns a JSON error response for a 404 message\r\n\r\n```js\r\nrestful.objectNotFound()\r\n```\r\nReturns a JSON error response for a 404 message because we couldn't find the object specified\r\n\r\n```js\r\nrestful.multipleObjectsFound()\r\n```\r\nReturns a JSON error response for a 404 message because we found too many objects on a detail route\r\n\r\n## Contributing\r\n\r\nIs always welcome, just reach out to [me](https://github.com/baugarten)\r\n\r\n## MIT License\r\nCopyright (c) 2012 by Ben Augarten\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n  THE SOFTWARE.\r\n\r\n","tagline":"A library for quickly providing a data api","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Node-restful","google":"UA-33101711-2"}